name: deploy

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # build
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: yarn install

      # dev build
      - run: yarn export
        if: github.ref == 'refs/heads/main'
        env:
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY:
          NEXT_PUBLIC_GA_TRACKCODE:
          NEXT_PUBLIC_UPLOAD_URL: https://upload.dev.example.com/user-upload


      # prod build (env vars can be different)
      - run: yarn export
        if: github.ref == 'refs/heads/production'
        env:
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY:
          NEXT_PUBLIC_GA_TRACKCODE:
          NEXT_PUBLIC_UPLOAD_URL: https://upload.example.com/user-upload

      # sync to s3
      - uses: aws-actions/configure-aws-credentials@v1
        if: github.event_name == 'push'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - run: aws s3 sync --delete --exclude data/data.json ./out s3://dev-5e88319bdf856ae0c197444b
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

      - run: aws s3 sync --delete --exclude data/data.json ./out s3://prod-7cedbb50051375323b2b37d6
        if: github.event_name == 'push' && github.ref == 'refs/heads/production'

      # purge cloudflare cache (dev and prod, caching is zone/domain level)
      - uses: jakejarvis/cloudflare-purge-action@v0.3.0
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN_DEV }}
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID_DEV }}

      - uses: jakejarvis/cloudflare-purge-action@v0.3.0
        if: github.event_name == 'push' && github.ref == 'refs/heads/production'
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN_PROD }}
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID_PROD }}
